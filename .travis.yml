---

python:
  - 2.7

services: docker

env:

  - docker_user: fubarhouse
    distro: ubuntu1304
    init: /sbin/init
    run_opts: --privileged
    playbook: playbook.yml
  - docker_user: fubarhouse
    distro: ubuntu1310
    init: /sbin/init
    run_opts: --privileged
    playbook: playbook.yml
  - docker_user: geerlingguy
    distro: ubuntu1404
    init: /sbin/init
    run_opts: --privileged
    playbook: playbook.yml
  - docker_user: fubarhouse
    distro: ubuntu1410
    init: /sbin/init
    run_opts: --privileged
    playbook: playbook.yml
  - docker_user: fubarhouse
    distro: ubuntu1504
    init: /sbin/init
    run_opts: --privileged
    playbook: playbook.yml
  - docker_user: fubarhouse
    distro: ubuntu1510
    init: /sbin/init
    run_opts: --privileged
    playbook: playbook.yml
  - docker_user: geerlingguy
    distro: ubuntu1604
    init: /sbin/init
    run_opts: --privileged
    playbook: playbook.yml
  - docker_user: fubarhouse
    distro: ubuntu1610
    init: /sbin/init
    run_opts: --privileged
    playbook: playbook.yml
  - docker_user: fubarhouse
    distro: ubuntu1704
    init: /sbin/init
    run_opts: --privileged
    playbook: playbook.yml
  - docker_user: fubarhouse
    distro: ubuntu1710
    init: /sbin/init
    run_opts: --privileged
    playbook: playbook.yml
  - docker_user: geerlingguy
    distro: centos6
    init: /sbin/init
    run_opts: --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro
    playbook: playbook.yml
  - docker_user: geerlingguy
    distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro
    playbook: playbook.yml
  - docker_user: fubarhouse
    distro: debian7
    init: /bin/systemd
    run_opts: --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro
    playbook: playbook.yml
  - docker_user: geerlingguy
    distro: debian8
    init: /lib/systemd/systemd
    run_opts: --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro
    playbook: playbook.yml
  - docker_user: fubarhouse
    distro: debian9
    init: /bin/systemd
    run_opts: --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro
    playbook: playbook.yml
  - docker_user: fubarhouse
    distro: fedora24
    init: /usr/lib/systemd/systemd
    run_opts: --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro
    playbook: playbook.yml
  - docker_user: fubarhouse
    distro: fedora25
    init: /usr/lib/systemd/systemd
    run_opts: --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro
    playbook: playbook.yml
  - docker_user: fubarhouse
    distro: fedora26
    init: /usr/lib/systemd/systemd
    run_opts: --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro
    playbook: playbook.yml

before_install:

  # Pull container.
  - 'docker pull ${docker_user}/docker-${distro}-ansible:latest'

script:

  - container_id=$(mktemp)

  # Run container in detached state.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${docker_user}/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} --syntax-check'

  # Test role.
  - 'travis_wait 60 docker exec "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} --sudo'

  - idempotence=$(mktemp)
  - >
    docker exec "$(cat ${container_id})"
    ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} --sudo
    | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/